@model NFL.Models.Addresses.Address

@{ 
    var Address = Model;
}

    <h3>Address</h3>
    <hr />

    @*Displaying Address STARTS*@
    <dt>
        @Html.DisplayNameFor(Add => Address.Street) :
    </dt>
    <dd>

        <div class="entry">
            @Html.DisplayFor(Add => Address.Street)
        </div>
        <div class="edit_field" style="display:none">
            @Html.HiddenFor(Add => Address.Id)
            @Html.HiddenFor(Add => Address.locationId)
            <div class="row">
                <div class="col-md-4">
                    @Html.EditorFor(Add => Address.Street, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-8">
                    @Html.ValidationMessageFor(Add => Address.Street, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    </dd>
    @*Displaying Address ENDS*@


    @*Displaying Zip Code STARTS*@
    <dt>
        @Html.DisplayNameFor(Add => Address.Location.ZipCode) :
    </dt>
    <dd>


        <div class="entry">
            @Html.DisplayFor(Add => Address.Location.ZipCode)
        </div>
        <div class="edit_field" style="display:none">
            <div class="row">
                <div class="col-md-4">
                    @Html.EditorFor(Add => Address.Location.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-8">
                    @Html.ValidationMessageFor(Add => Address.Location.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </dd>
    @*Displaying Zip Code ENDS*@

    @*Displaying City STARTS*@
    <dt>
        @Html.DisplayNameFor(Add => Address.Location.City) :
    </dt>
    <dd>

        <div class="entry">
            @Html.DisplayFor(Add => Address.Location.City)
        </div>
        <div class="edit_field" style="display:none">
            <div class="row">
                <div class="col-md-4">
                    @Html.DropDownListFor(Add => Address.Location.City, (Address.Location.City != null) ?
    new SelectList(new[] { Address.Location.City }) : new SelectList(new[] { "" }), new { @class = "form-control" , @value= Address.Location.City })
                </div>
                <div class="col-md-8">
                    @Html.ValidationMessageFor(Add => Address.Location.City, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </dd>
    @*Displaying City ENDS*@

    @*Displaying State STARTS*@
    <dt>
        @Html.DisplayNameFor(Add => Address.Location.State) :
    </dt>
    <dd>
        <div class="entry">
            @Html.DisplayFor(Add => Address.Location.StateName)
        </div>
        <div class="edit_field" style="display:none">
            <div class="row">
                <div class="col-md-4">
                    @Html.EditorFor(Add => Address.Location.State, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-8">
                    @Html.ValidationMessageFor(Add => Address.Location.State, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </dd>
    @*Displaying State ENDS*@


    @Html.HiddenFor(Add => Address.Location.City)
    @Html.HiddenFor(Add => Address.Location.StateName)
    @Html.HiddenFor(Add => Address.Location.County)
    @Html.HiddenFor(Add => Address.Location.lat)
    @Html.HiddenFor(Add => Address.Location.lng)
    @Html.HiddenFor(Add => Address.Location.Id)



















